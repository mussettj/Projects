/*CREATE SCHEMA dannys_diner;
SET search_path = dannys_diner;*/

CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');
  
/* Q1 - What is the total amount each customer spent at the restaurant? */ 
SELECT customer_id
, SUM(price) AS Customer_totals
FROM sales
JOIN menu 
ON sales.product_id = menu.product_id 
GROUP BY customer_id
ORDER BY Customer_totals DESC; 

/* Q2 - How many days has each customer visited the restaurant? */
SELECT customer_id
, COUNT(DISTINCT (order_date)) AS days_visited
FROM sales
GROUP BY customer_id ;

/* Q3 - What was the first item from the menu purchased by each customer? */
SELECT DISTINCT(customer_id)
, order_date
, product_name
FROM sales
JOIN menu
ON sales.product_id = menu.product_id
WHERE sales.order_date = ANY
(SELECT MIN(order_date)
 FROM sales
 GROUP BY customer_id) 
ORDER BY customer_id  ;

/* Q4- What is the most purchased item on the menu and how many 
times was it purchased by all customers?*/
SELECT product_name
, COUNT(product_name) as max_product
FROM sales
JOIN menu 
ON sales.product_id = menu.product_id
GROUP BY product_name
ORDER BY max_product DESC
LIMIT 1 ;

/* Q4b - How many times did each customer purchase the most common product */
SELECT sales.customer_id
, COUNT(*) AS no_times_purchased
FROM sales 
JOIN menu
ON sales.product_id = menu.product_id
WHERE sales.product_id = ANY(SELECT COUNT(DISTINCT(product_id)) as max_product
					   FROM sales
					   ORDER BY max_product DESC
					   LIMIT 1)
GROUP BY sales.customer_id 
ORDER BY no_times_purchased DESC, customer_id;


/* Q5 - Which item was the most popular for each customer? */
/* Select from CTE where the products each customer buys is ranked, 
therefore those with rank 1 are most popular */
WITH ranking AS 
(
	SELECT sales.customer_id, menu.product_name,
	COUNT(sales.product_id) AS max,
	DENSE_RANK() OVER(PARTITION BY sales.customer_id
					  ORDER BY COUNT(sales.product_id) DESC) as r
	FROM menu
	JOIN sales
	ON menu.product_id = sales.product_id
	GROUP BY sales.customer_id, sales.product_id, menu.product_name
)
SELECT customer_id, product_name, max
FROM ranking
WHERE r = 1;

/* Q6 - Which item was purchased first by the customer after they became a member? */
WITH first_mem_item AS 
(
SELECT sales.customer_id, 
	menu.product_name,
	sales.order_date, 
	members.join_date,
	DENSE_RANK() OVER (PARTITION BY sales.customer_id ORDER BY sales.order_date) as r
	FROM sales
	JOIN menu ON sales.product_id = menu.product_id
	JOIN members ON sales.customer_id = members.customer_id
	WHERE sales.order_date >= members.join_date
)
SELECT *
FROM first_mem_item
WHERE r = 1 ;

/* Q7 - Which item was purchased just before the customer became a member? */
WITH pre_mem_item AS 
(
SELECT sales.customer_id, 
	menu.product_name,
	sales.order_date, 
	members.join_date,
	DENSE_RANK() OVER (PARTITION BY sales.customer_id ORDER BY sales.order_date DESC) as r
	FROM sales
	JOIN menu ON sales.product_id = menu.product_id
	JOIN members ON sales.customer_id = members.customer_id
	WHERE sales.order_date < members.join_date
)
SELECT *
FROM pre_mem_item
WHERE r = 1 ;

/* Q8 - What is the total items and amount spent for each member
before they became a member? */
WITH pre_mem_item AS 
(
SELECT sales.customer_id, 
	menu.product_name,
	sales.order_date, 
	members.join_date,
	menu.price 
	FROM sales
	JOIN menu ON sales.product_id = menu.product_id
	JOIN members ON sales.customer_id = members.customer_id
	WHERE sales.order_date < members.join_date
)
SELECT customer_id, COUNT(price), SUM(price)
FROM pre_mem_item 
GROUP BY customer_id;


/* Q9 - If each $1 spent equates to 10 points and sushi
has a 2x points multiplier - how many points would each customer have? */
SELECT sales.customer_id
, SUM(CASE WHEN sales.product_id = 1 THEN menu.price * 20
	ELSE menu.price * 10 END) AS points_earned
FROM sales
JOIN menu ON sales.product_id = menu.product_id
GROUP BY sales.customer_id ;

/* Q10 - In the first week after a customer joins the program 
(including their join date) they earn 2x points on all items, 
not just sushi - how many points do customer A and B have at the end of January? */ 
WITH points_inc_first_week AS
(SELECT members.customer_id,
 SUM(CASE WHEN ((sales.order_date::DATE - members.join_date ::DATE)) <= 7 THEN menu.price * 20
	 WHEN sales.product_id = 1 THEN menu.price * 20
	 ELSE menu.price * 10 END ) AS points
 FROM sales
 JOIN menu ON sales.product_id = menu.product_id
 JOIN members ON sales.customer_id = members.customer_id
 WHERE extract (MONTH FROM sales.order_date) = 1
 GROUP BY members.customer_id
)
SELECT customer_id, points
FROM points_inc_first_week
ORDER BY customer_id;
